<!-- This defines Load instructions described in SVP64 -->

# Load Byte and Zero

SVD-Form

* lbz RT,D(RA),RC

Pseudo-code:

    b <- (RA|0)
    EA <- b + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- [0]*56 || MEM(EA, 1)

Special Registers Altered:

    None

# Load Byte and Zero with Update

SVD-Form

* lbzu RT,D(RA),RC

Pseudo-code:

    EA <- (RA) + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- [0] * 56 || MEM(EA, 1)
    RA <- EA

Special Registers Altered:

    None

# Load Halfword and Zero

SVD-Form

* lhz RT,D(RA),RC

Pseudo-code:

    b <- (RA|0)
    EA <- b + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- [0] * 48 || MEM(EA, 2)

Special Registers Altered:

    None

# Load Halfword and Zero with Update

SVD-Form

* lhzu RT,D(RA),RC

Pseudo-code:

    EA <- (RA) + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- [0] * 48 || MEM(EA, 2)
    RA <- EA

Special Registers Altered:

    None

# Load Halfword Algebraic

SVD-Form

* lha RT,D(RA),RC

Pseudo-code:

    b <- (RA|0)
    EA <- b + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- EXTS(MEM(EA, 2))

Special Registers Altered:

    None

# Load Halfword Algebraic with Update

SVD-Form

* lhau RT,D(RA),RC

Pseudo-code:

    EA <- (RA) + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- EXTS(MEM(EA, 2))
    RA <- EA

Special Registers Altered:

    None

# Load Word and Zero

SVD-Form

* lwz RT,D(RA),RC

Pseudo-code:

    b <- (RA|0)
    EA <- b + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- [0] * 32 || MEM(EA, 4)

Special Registers Altered:

    None

# Load Word and Zero with Update

SVD-Form

* lwzu RT,D(RA),RC

Pseudo-code:

    EA <- (RA) + (bitrev(srcstep, VL) * EXTS(D)) << RC
    RT <- [0]*32 || MEM(EA, 4)
    RA <- EA

Special Registers Altered:

    None

# Load Word Algebraic

SVDS-Form

* lwa RT,DS(RA),RC

Pseudo-code:

    b <- (RA|0)
    EA <- b + (bitrev(srcstep, VL) * EXTS(DS || 0b00)) << RC
    RT <- EXTS(MEM(EA, 4))

Special Registers Altered:

    None

# Load Doubleword

SVDS-Form

* ld RT,DS(RA),RC

Pseudo-code:

    b <- (RA|0)
    EA <- b + (bitrev(srcstep, VL) * EXTS(DS || 0b00)) << RC
    RT <- MEM(EA, 8)

Special Registers Altered:

    None

# Load Doubleword with Update Indexed

SVDS-Form

* ldu RT,DS(RA),RC

Pseudo-code:

    EA <- (RA) + (bitrev(srcstep, VL) * EXTS(DS || 0b00)) << RC
    RT <- MEM(EA, 8)
    RA <- EA

Special Registers Altered:

    None

